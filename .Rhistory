BIC(model_complet, m0.1, m0.2)
base <- read_csv("../preprocessing/clean-data.csv", col_types = cols(
Marital_status = col_character(),
Application_mode = col_character(),
Application_order = col_integer(),
Course = col_character(),
Daytime_evening_attendance = col_character(),
Previous_qualification = col_character(),
Previous_qualification_grade = col_double(),
Nacionality = col_character(),
Mother_s_qualification = col_integer(),
Father_s_qualification = col_integer(),
Mother_s_occupation = col_character(),
Father_s_occupation = col_character(),
Admission_grade = col_double(),
Displaced = col_integer(),
Educational_special_needs = col_integer(),
Debtor = col_integer(),
Tuition_fees_up_to_date = col_integer(),
Gender = col_integer(),
Scholarship_holder = col_integer(),
Age_at_enrollment = col_integer(),
International = col_integer(),
Curricular_units_1st_sem_credited = col_integer(),
Curricular_units_1st_sem_enrolled = col_integer(),
Curricular_units_1st_sem_evaluations = col_integer(),
Curricular_units_1st_sem_approved = col_integer(),
Curricular_units_1st_sem_grade = col_double(),
Curricular_units_1st_sem_without_evaluations = col_integer(),
Curricular_units_2nd_sem_credited = col_integer(),
Curricular_units_2nd_sem_enrolled = col_integer(),
Curricular_units_2nd_sem_evaluations = col_integer(),
Curricular_units_2nd_sem_approved = col_integer(),
Curricular_units_2nd_sem_grade = col_double(),
Curricular_units_2nd_sem_without_evaluations = col_integer(),
Unemployment_rate = col_double(),
Inflation_rate = col_double(),
GDP = col_double(),
Target = col_character()
)
)
x <- tolower(as.character(base$Target))   # normalitza a minúscules
base$target <- ifelse(x == "dropout", 1L,
ifelse(x %in% c("enrolled","graduated"), 0L, 0L))
if ("Target" %in% names(base)) {
base <- base[ , setdiff(names(base), "Target"), drop = FALSE]
}
X <- model.matrix(target ~ ., data = base)
y <- base$target
det <- detect_separation(X, y, family = binomial())
det
base <- base %>%
mutate(
Course = fct_lump_min(Course, min = 150, other_level = "Other"),
Previous_qualification = fct_lump_min(Previous_qualification, min = 150, other_level = "Other"),
Nacionality = fct_lump_min(Nacionality, min = 150, other_level = "Other"),
Application_mode = fct_lump_min(Application_mode, min = 150, other_level = "Other"),
Mother_s_occupation = fct_lump_min(Mother_s_occupation, min = 150, other_level = "Other"),
Father_s_occupation = fct_lump_min(Father_s_occupation, min = 150, other_level = "Other"),
Marital_status = fct_lump_min(Marital_status, min = 150, other_level = "Other")
)
X <- model.matrix(target ~ ., data = base)
y <- base$target
det <- detect_separation(X, y, family = binomial())
det
model_complet <- glm(target ~ ., data = base, family = binomial(link = "logit"))
model_nul <- glm(target ~ 1, data = base, family = binomial(link = "logit"))
m0.1 <- glm(target ~
Course +
Application_mode +
Mother_s_qualification +
Father_s_occupation +
Debtor +
Tuition_fees_up_to_date +
Scholarship_holder +
Age_at_enrollment +
Curricular_units_1st_sem_approved +
Curricular_units_2nd_sem_enrolled +
Curricular_units_2nd_sem_approved +
Unemployment_rate,
data = base,
family = binomial(link = "logit"))
m0.2 <- step(model_complet, direction = "both", trace = FALSE)
anova(m0.1, m0.2, test = "Chisq")
AIC(model_complet, m0.1, m0.2)
BIC(model_complet, m0.1, m0.2)
m0.2 <- step(model_complet, direction = "backward", trace = FALSE)
anova(m0.1, m0.2, test = "Chisq")
AIC(model_complet, m0.1, m0.2)
BIC(model_complet, m0.1, m0.2)
res <- resid(m0.1, type = "pearson")
# 1) Residus vs ajustats
par(mfrow = c(1,1))
residualPlots(m0.1, terms = ~ 1, type = "pearson", fitted = TRUE)
abline(h = 0, col = "red", lty = 2)
p_hat <- predict(m0.1, newdata = base, type = "response")
pred <- prediction(p_hat, base$target)
perf <- performance(pred, "tpr", "fpr")  # TPR vs FPR = ROC
plot(perf, col = "#d62728", lwd = 2, main = "ROC - best_mod (ROCR)")
abline(0, 1, lty = 2, col = "grey50")
auc_perf <- performance(pred, "auc")
auc_value <- as.numeric(auc_perf@y.values)
auc_value
num_vars <- c("Age_at_enrollment",
"Curricular_units_1st_sem_approved",
"Curricular_units_2nd_sem_enrolled",
"Curricular_units_2nd_sem_approved",
"Unemployment_rate")
# Dibuixa 2x2: tres predictors + predictor lineal
par(mfrow = c(1,1))
for (v in num_vars) {
x <- base[[v]]
plot(x, res,
xlab = v, ylab = "Pearson residuals",
pch = 1, col = "#00000060",
main = paste("Residuals vs", v))
abline(h = 0, col = "grey50", lty = 2)
lines(lowess(x, res), col = "magenta", lwd = 2)
}
num_vars <- c("Age_at_enrollment",
"Curricular_units_1st_sem_approved",
"Curricular_units_2nd_sem_enrolled",
"Curricular_units_2nd_sem_approved",
"Unemployment_rate")
par(mfrow = c(2,2))
for (v in num_vars) {
x <- base[[v]]
plot(x, res,
xlab = v, ylab = "Pearson residuals",
pch = 1, col = "#00000060",
main = paste("Residuals vs", v))
abline(h = 0, col = "grey50", lty = 2)
lines(lowess(x, res), col = "magenta", lwd = 2)
}
num_vars <- c("Age_at_enrollment",
"Curricular_units_1st_sem_approved",
"Curricular_units_2nd_sem_enrolled",
"Curricular_units_2nd_sem_approved",
"Unemployment_rate")
par(mfrow = c(2,2))
for (v in num_vars) {
x <- base[[v]]
plot(x, res,
xlab = v, ylab = "Pearson residuals",
pch = 1, col = "#00000060",
main = paste("Residuals vs", v))
abline(h = 0, col = "grey50", lty = 2)
lines(lowess(x, res), col = "magenta", lwd = 2)
}
num_vars <- c("Age_at_enrollment",
"Curricular_units_1st_sem_approved",
"Curricular_units_2nd_sem_enrolled",
"Curricular_units_2nd_sem_approved",
"Unemployment_rate")
par(mfrow = c(1,1)
for (v in num_vars) {
num_vars <- c("Age_at_enrollment",
"Curricular_units_1st_sem_approved",
"Curricular_units_2nd_sem_enrolled",
"Curricular_units_2nd_sem_approved",
"Unemployment_rate")
par(mfrow = c(1,1))
for (v in num_vars) {
x <- base[[v]]
plot(x, res,
xlab = v, ylab = "Pearson residuals",
pch = 1, col = "#00000060",
main = paste("Residuals vs", v))
abline(h = 0, col = "grey50", lty = 2)
lines(lowess(x, res), col = "magenta", lwd = 2)
}
# 3) Boxplots per a predictors categòrics del model
cat_vars <- c("Course",
"Application_mode",
"Mother_s_qualification",
"Father_s_occupation",
"Debtor",
"Tuition_fees_up_to_date",
"Scholarship_holder" )
par(mfrow = c(1,1))
for (v in cat_vars) {
boxplot(res ~ base[[v]],
main = paste("Residuals by", v),
xlab = v, ylab = "Pearson residuals",
col = "lightblue", las = 2, cex.axis = 0.7, outline = FALSE)
abline(h = 0, col = "red", lty = 2)
}
# 3) Boxplots per a predictors categòrics del model
cat_vars <- c("Course",
"Application_mode",
"Mother_s_qualification",
"Father_s_occupation",
"Debtor",
"Tuition_fees_up_to_date",
"Scholarship_holder" )
par(mfrow = c(2,2))
for (v in cat_vars) {
boxplot(res ~ base[[v]],
main = paste("Residuals by", v),
xlab = v, ylab = "Pearson residuals",
col = "lightblue", las = 2, cex.axis = 0.7, outline = FALSE)
abline(h = 0, col = "red", lty = 2)
}
num_vars <- c("Age_at_enrollment",
"Curricular_units_1st_sem_approved",
"Curricular_units_2nd_sem_enrolled",
"Curricular_units_2nd_sem_approved",
"Unemployment_rate")
par(mfrow = c(1,2))
for (v in num_vars) {
x <- base[[v]]
plot(x, res,
xlab = v, ylab = "Pearson residuals",
pch = 1, col = "#00000060",
main = paste("Residuals vs", v))
abline(h = 0, col = "grey50", lty = 2)
lines(lowess(x, res), col = "magenta", lwd = 2)
}
num_vars <- c("Age_at_enrollment",
"Curricular_units_1st_sem_approved",
"Curricular_units_2nd_sem_enrolled",
"Curricular_units_2nd_sem_approved",
"Unemployment_rate")
par(mfrow = c(2,1))
for (v in num_vars) {
x <- base[[v]]
plot(x, res,
xlab = v, ylab = "Pearson residuals",
pch = 1, col = "#00000060",
main = paste("Residuals vs", v))
abline(h = 0, col = "grey50", lty = 2)
lines(lowess(x, res), col = "magenta", lwd = 2)
}
num_vars <- c("Age_at_enrollment",
"Curricular_units_1st_sem_approved",
"Curricular_units_2nd_sem_enrolled",
"Curricular_units_2nd_sem_approved",
"Unemployment_rate")
par(mfrow = c(1,1))
for (v in num_vars) {
x <- base[[v]]
plot(x, res,
xlab = v, ylab = "Pearson residuals",
pch = 1, col = "#00000060",
main = paste("Residuals vs", v))
abline(h = 0, col = "grey50", lty = 2)
lines(lowess(x, res), col = "magenta", lwd = 2)
}
num_vars <- c("Age_at_enrollment",
"Curricular_units_1st_sem_approved",
"Curricular_units_2nd_sem_enrolled",
"Curricular_units_2nd_sem_approved",
"Unemployment_rate")
par(mfrow = c(1,1))
for (v in num_vars) {
x <- base[[v]]
plot(x, res,
xlab = v, ylab = "Pearson residuals",
pch = 1, col = "#00000060",
main = paste("Residuals vs", v))
abline(h = 0, col = "grey50", lty = 2)
lines(lowess(x, res), col = "magenta", lwd = 2)
}
influencePlot(m0.1)
#variable continua 1  Curricular_units_1st_sem_approved (df1 / units1)
m1.1 <- glm(cbind(ypos,yneg) ~ units1,           data = df1, family = binomial)
df1 <- with(base, aggregate(
x = cbind(ypos = target, yneg = 1 - target),
by = list(units1 = Curricular_units_1st_sem_approved),
FUN = sum
))
m1 <- glm(cbind(ypos, yneg) ~ units1, data = df1, family = binomial(link="logit"))
summary(m1)
residualPlots(m1, main = "Aggregated: units1")
#variable continua 1  Curricular_units_1st_sem_approved (df1 / units1)
m1.1 <- glm(cbind(ypos,yneg) ~ units1,           data = df1, family = binomial)
m1.2 <- glm(cbind(ypos,yneg) ~ poly(units1, 2),  data = df1, family = binomial)
m1.3 <- glm(cbind(ypos,yneg) ~ poly(units1, 3),  data = df1, family = binomial)
m1.4 <- glm(cbind(ypos,yneg) ~ poly(units1, 4),  data = df1, family = binomial)
#Deviance test
anova(m1.1, m1.2, test = "Chisq")
anova(m1.2, m1.3, test = "Chisq")
anova(m1.3, m1.4, test = "Chisq")
#AIC/BIC
cbind(AIC(m1.1, m1.2, m1.3, m1.4),
BIC = BIC(m1.1, m1.2, m1.3, m1.4)[,2])
df2 <- with(base, aggregate(
x = cbind(ypos = target, yneg = 1 - target),
by = list(units2e = Curricular_units_2nd_sem_enrolled),
FUN = sum
))
m2 <- glm(cbind(ypos, yneg) ~ units2e, data = df2, family = binomial(link="logit"))
summary(m2)
residualPlots(m2, main = "Aggregated: units2e")
m2.1 <- glm(cbind(ypos,yneg) ~ units2e,          data = df2, family = binomial)
m2.2 <- glm(cbind(ypos,yneg) ~ poly(units2e, 2), data = df2, family = binomial)
m2.3 <- glm(cbind(ypos,yneg) ~ poly(units2e, 3), data = df2, family = binomial)
m2.4 <- glm(cbind(ypos,yneg) ~ poly(units2e, 4), data = df2, family = binomial)
#Deviance test
anova(m2.1, m2.2, test = "Chisq")
anova(m2.2, m2.3, test = "Chisq")
anova(m2.3, m2.4, test = "Chisq")
#AIC/BIC
cbind(AIC(m2.1, m2.2, m2.3, m2.4),
BIC = BIC(m2.1, m2.2, m2.3, m2.4)[,2])
df3 <- with(base, aggregate(
x = cbind(ypos = target, yneg = 1 - target),
by = list(units2a = Curricular_units_2nd_sem_approved),
FUN = sum
))
m3 <- glm(cbind(ypos, yneg) ~ units2a, data = df3, family = binomial(link="logit"))
summary(m3)
residualPlots(m3, main = "Aggregated: units2a")
#variable continua 3  Curricular_units_2nd_sem_approved (df3 / units2a)
m3.1 <- glm(cbind(ypos,yneg) ~ units2a,          data = df3, family = binomial)
m3.2 <- glm(cbind(ypos,yneg) ~ poly(units2a, 2), data = df3, family = binomial)
m3.3 <- glm(cbind(ypos,yneg) ~ poly(units2a, 3), data = df3, family = binomial)
m3.4 <- glm(cbind(ypos,yneg) ~ poly(units2a, 4), data = df3, family = binomial)
#Deviance test
anova(m3.1, m3.2, test = "Chisq")
anova(m3.2, m3.3, test = "Chisq")
anova(m3.3, m3.4, test = "Chisq")
#AIC/BIC
cbind(AIC(m3.1, m3.2, m3.3, m3.4),
BIC = BIC(m3.1, m3.2, m3.3, m3.4)[,2])
par(mfrow = c(1, 1))
residualPlot(m1.4, term = "units1", type = "pearson",
id.n = 0, ylim = c(-3, 3))
residualPlot(m2.3, term = "units1", type = "pearson",
id.n = 0, ylim = c(-3, 3))
residualPlot(m3.3, term = "units1", type = "pearson",
id.n = 0, ylim = c(-3, 3))
par(mfrow = c(2,2))
residualPlot(m1.4, term = "units1", type = "pearson",
id.n = 0, ylim = c(-3, 3))
residualPlot(m2.3, term = "units1", type = "pearson",
id.n = 0, ylim = c(-3, 3))
residualPlot(m3.3, term = "units1", type = "pearson",
id.n = 0, ylim = c(-3, 3))
par(mfrow = c(2,2))
residualPlot(m1.4,, type = "pearson")
residualPlot(m2.3, term = "units1", type = "pearson",
id.n = 0, ylim = c(-3, 3))
residualPlot(m3.3, term = "units1", type = "pearson",
id.n = 0, ylim = c(-3, 3))
par(mfrow = c(2,2))
residualPlot(m1.4, term = "units1", type = "pearson",
id.n = 0, ylim = c(-3, 3))
residualPlot(m2.3, term = "units1", type = "pearson",
id.n = 0, ylim = c(-3, 3))
residualPlot(m3.3, term = "units1", type = "pearson",
id.n = 0, ylim = c(-3, 3))
par(mfrow = c(1,1))
residualPlot(m1.4, term = "units1", type = "pearson",
id.n = 0, ylim = c(-3, 3))
residualPlot(m2.3, term = "units1", type = "pearson",
id.n = 0, ylim = c(-3, 3))
residualPlot(m3.3, term = "units1", type = "pearson",
id.n = 0, ylim = c(-3, 3))
m0.3 <- glm(target ~
Course +
Mother_s_qualification +
Father_s_occupation +
Debtor +
Tuition_fees_up_to_date +
Scholarship_holder +
Age_at_enrollment +
poly(Curricular_units_1st_sem_approved, 4) +
Curricular_units_2nd_sem_enrolled +
poly(Curricular_units_2nd_sem_approved, 3) +
Unemployment_rate,
data = base,
family = binomial(link = "logit"))
par(mfrow = c(1, 1))
residualPlots(m0.3, ~ 1, type = "pearson")
anova(m0.1, m0.3, test = "Chisq")
AIC(m0.1, m0.3)
BIC(m0.1, m0.3)
summary(base$Iunits1)
summary(base$Iunits2a)
base$Iunits1 <- as.factor(ifelse(base$Curricular_units_1st_sem_approved <= 5, 0, 1))
base$Iunits2a <- as.factor(ifelse(base$Curricular_units_2nd_sem_approved <= 4, 0, 1))
summary(base$Iunits1)
summary(base$Iunits2a)
anova(m0.3, m0.5, test = "Chisq")
m0.5 <- glm( target ~ Course +
Mother_s_qualification +
Father_s_occupation +
Debtor +
Tuition_fees_up_to_date +
Scholarship_holder +
Age_at_enrollment +
poly(Curricular_units_1st_sem_approved, 4) * Iunits1 +
poly(Curricular_units_2nd_sem_approved, 3) * Iunits2a +
Unemployment_rate,
data = base,
family = binomial(link = "logit"))
summary(m0.5)
anova(m0.3, m0.5, test = "Chisq")
BIC(m0.1, m0.3, m0.5)
AIC(m0.1, m0.3, m0.5)
anova(m0.1, m0.5, test = "Chisq")
BIC(m0.1, m0.3, m0.5)
AIC(m0.1, m0.3, m0.5)
BIC(m0.1, m0.3, m0.5)
AIC(m0.1, m0.3, m0.5)
# Comparació de diferent link
m_probit <- glm(target ~
Course +
Mother_s_qualification +
Father_s_occupation +
Debtor +
Tuition_fees_up_to_date +
Scholarship_holder +
Age_at_enrollment +
Curricular_units_1st_sem_approved +
Curricular_units_2nd_sem_enrolled +
Curricular_units_2nd_sem_approved +
Unemployment_rate,
data = base,
family = binomial(link = "probit"))
anova(m0.1, m_probit, test = "Chisq")
# Comparació AIC/BIC
AIC(m0.1, m_probit)
BIC(m0.1, m_probit)
p_hat <- predict(m0.1, newdata = base, type = "response")
pred <- prediction(p_hat, base$target)
perf <- performance(pred, "tpr", "fpr")  # TPR vs FPR = ROC
plot(perf, col = "#d62728", lwd = 2, main = "ROC - best_mod (ROCR)")
abline(0, 1, lty = 2, col = "grey50")
auc_perf <- performance(pred, "auc")
auc_value <- as.numeric(auc_perf@y.values)
auc_value
data <- read_csv("./time-series/monthly-car-sales.csv")
data <- read_csv("./time-series/monthly-car-sales.csv")
library(readr)
library(ggplot2)
library(dplyr)
library(readr)
library(ggplot2)
library(dplyr)
data <- read_csv("./time-series/monthly-car-sales.csv")
setwd("~/universitat/2n1q/me/projecte/practicaME/time-series")
setwd("~/universitat/2n1q/me/projecte/practicaME")
data <- read_csv("./time-series/monthly-car-sales.csv")
data <- data %>%
mutate(Month = as.Date(paste0(Month, "-01")))
ggplot(data, aes(x = Month, y = Sales)) +
geom_line(color = "darkgrey", linewidth = 1) +
labs(title = "Sèrie temporal de les vendes mensuals de cotxes",
x = "Data",
y = "Vendes de cotxes") +
theme_minimal()
library(readr)
library(forecast)
library(dplyr)
library(ggplot2)
car_sales <- read_csv("./time-series/monthly-car-sales.csv", show_col_types = FALSE)
Car_sales_ts <- ts(car_sales$Sales, start = c(1960, 1), frequency = 12)
plot(Car_sales_ts)
# Transformació logarítmica
Ln_sales <- log(car_sales_ts)
plot(decomposada)
sales <- car_sales$Sales
# Fixa la mida del grup (per exemple, 12, per anys)
group_size <- 12
n <- length(sales)
num_groups <- floor(n / group_size)
# Calcula mitjana i variància per a cada grup
means <- numeric(num_groups)
vars <- numeric(num_groups)
for (i in 1:num_groups) {
group <- sales[((i-1)*group_size + 1):(i*group_size)]
means[i] <- mean(group)
vars[i] <- var(group)
}
# Prepara data frame per plotar
df <- data.frame(mean = means, variance = vars)
# Plot de la variància contra la mitjana de cada grup
ggplot(df, aes(x = mean, y = variance)) +
geom_point(color = "blue", size = 2) +
geom_smooth(method = "lm", se = FALSE, color = "red", linewidth = 1) +
labs(title = "Mean-Variance plot",
x = "Mitjana del grup",
y = "Variància del grup") +
theme_minimal()
# Associa cada valor a un grup de 12 observacions
group <- rep(1:floor(length(sales)/12), each = 12, length.out = length(sales))
df <- data.frame(sales = sales, group = as.factor(group))
# Crea el boxplot per grups
ggplot(df, aes(x = group, y = sales)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Boxplot de vendes de cotxes per períodes d’1 any",
x = "Grup anual",
y = "Vendes") +
theme_minimal()
# Estima el millor valor de lambda per Box-Cox
lambda <- BoxCox.lambda(sales)
# Aplica la transformació Box-Cox a la sèrie
sales_boxcox <- BoxCox(sales, lambda = lambda)
# Comprova
cat("Lambda òptim Box-Cox:", lambda, "\n")
# Si vols boxplots per comparativa:
group <- rep(1:floor(length(sales_boxcox)/12), each = 12, length.out = length(sales_boxcox))
df_boxcox <- data.frame(sales_boxcox = sales_boxcox, group = as.factor(group))
library(ggplot2)
ggplot(df_boxcox, aes(x = group, y = sales_boxcox)) +
geom_boxplot(fill = "lightyellow") +
labs(title = "Boxplot de Box-Cox(vendes) per períodes d’1 any",
x = "Grup anual",
y = "Box-Cox(vendes)") +
theme_minimal()
